<?xml version="1.0"?>

<document>
    <properties>
        <title>ThreadPool</title>
        <author>Mauro Talevi</author>
    </properties>
    <body>
        <section name="Introduction">
<p>
ThreadPool is a utility component that provides the user with ability to
pool threads. The toolkit also provides easy mechanisms for users to
customize the thread environment before and after it executes the work
on the pooled threads.
</p>
        </section>
        <section name="Multi-Container support">
<p>
ThreadPool implementations are designed to support deployment in different 
containers or frameworks, while honouring the same API.  
</p>
			<subsection name="Avalon Framework Container">
<p>
<a href="http://avalon.apache.org/framework">Avalon Framework</a> supports Inversion of Control (IoC),
via a set of interfaces.  
</p>
<p>
<code>org.jcomponent.threadpool.impl.AvalonCommonsThreadPool</code> provides an implementation of
the <code>org.jcomponent.threadpool.ThreadPool</code> interface which is Avalon-compatible.
</p>
			</subsection>
			<subsection name="Pico Container">
<p>
<a href="http://picocontainer.org">Pico Container</a> supports IoC in a more agile and embeddable
way, without the need to import any external interface or class.
</p>
<p>
<code>org.jcomponent.threadpool.impl.PicoCommonsThreadPool</code> provides an implementation of
the <code>org.jcomponent.threadpool.ThreadPool</code> interface which is Pico-compatible.
</p>
			</subsection>
        </section>
    </body>
</document>
