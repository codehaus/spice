<?xml version="1.0"?>
<document>

  <properties>
    	<title>LoggerStore Configuration</title>
  </properties>

  <body>
	  <section name="Configurator">
	  <p>The Configurator class has two static methods to create LoggerStores
	  based on the configuration resource - which can be path to a file or  
	  an InputStream:
	  <source>
    public static LoggerStore createLoggerStore( final String configuratorType,
                                                 final String resource )
        throws Exception;
    public static LoggerStore createLoggerStore( final String configuratorType,
                                                 final InputStream resource )
        throws Exception;
      </source>  
      </p>
      <p>The configurator type may be 
		<ul>
			<li>Configurator.LOGKIT for a LogKit XML resource</li>
			<li>Configurator.LOG4J_DOM for a Log4J XML resource </li>
			<li>Configurator.LOG4J_PROPERTY for a Log4J property resource</li>
			<li>Configurator.JDK14 for a JDK 1.4 property resource</li>
	    </ul>
      </p>  
      </section>
	  <section name="loggerstore.properties">
	  <p>LoggerStore may also be configured via a property found in the jar META-INF:	  
	  <source>
META-INF/spice/loggerstore.properties
	  </source>
	  and then using the InitialLoggerStoreFactory as:
	  <source>
final InitialLoggerStoreFactory factory = new InitialLoggerStoreFactory();
return factory.createLoggerStore( new HashMap() );
	  </source>
	  </p>
	  <p>
	  The loggerstore.properties file contains the LoggerStore factory implementation class name and the 
	  path the the configuration resource.  For example:
	  <source>
org.realityforge.loggerstore.factory=org.realityforge.loggerstore.LogKitLoggerStoreFactory
org.realityforge.loggerstore.file=/path/to/logconfig.xml
	  </source>
	  </p> 
      <p>The possible factory classes are:
		<ul>
			<li>org.realityforge.loggerstore.LogKitLoggerStoreFactory</li>
			<li>org.realityforge.loggerstore.DOMLog4JLoggerStoreFactory</li>
			<li>org.realityforge.loggerstore.PropertyLog4JLoggerStoreFactory</li>
			<li>org.realityforge.loggerstore.JDK14LoggerStoreFactory</li>
	    </ul>
      </p>  
	  </section>
	  <section name="LoggerStoreFactory">
	  <p>One can also instantiate directly one of the above LoggerStoreFactory classes and call the 
	  create method with the appropriate configuration parameters.  
	  The configuration map may contain different resources indexed by the class name:
      <p>The possible factory classes are:
		<ul>
			<li>java.util.Properties</li>
			<li>org.w3c.dom.Element</li>
			<li>org.apache.avalon.configuration.Configuration</li>
			<li>java.io.InputStream</li>
	    </ul>
      </p>  
	  For example for Log4J, configured via DOM:	  
	  <source>
final LoggerStoreFactory factory = new DOMLog4JLoggerStoreFactory();
final Map config = new HashMap();
config.put("org.w3c.dom.Element", element);
return factory.createLoggerStore( config );
	  </source>
	  </p>
	  </section>
  </body>

</document>
