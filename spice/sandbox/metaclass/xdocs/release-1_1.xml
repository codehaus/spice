<?xml version="1.0"?>
<document>

    <properties>
        <title>MetaClass Release 1.1</title>
        <author email="peter at realityforge.org">Peter Donald</author>
    </properties>

    <body>
        <section name="Introduction">
            <p>
                This is the second release of MetaClass. This release
                introduces several refactorings to simplify usage of
                MetaClass in response to user feedback. See the
                changes below for a comprehensive list of changes in
                the release. The release can be downloaded from;
            </p>
            <ul>
                <li>
                    <a href="http://sourceforge.net/project/showfiles.php?group_id=67448&amp;release_id=XXXXXXXXXXXXX">SourceForge Mirrors</a>
                </li>
            </ul>
        </section>
        <section name="Changes">
            <ul>
                <li>
                    Removed the notion of Package-level attributes
                    and corresponding PackageDescriptor. This was removed
                    as there was no actual mechanism to compile package
                    attributes. There was also ambiguity wrt how to handle
                    package attributes. See the
                    <a href="faq.html#Package%20Attributes">FAQ</a> for more
                    details.
                </li>
                <li>
                    Fixed a bug where methods with the same name and the
                    same number of parameters would always return the first
                    methods attributes. This bug was also fixed for
                    constructors that had the same number of parameters.
                </li>
                <li>
                    Moved the following classes into the package
                    <tt>org.realityforge.metaclass.introspector</tt> so that
                    now all the packages have clean dependency lines and there
                    is no circular dependencies. The classes moved included;
                    <tt>org.realityforge.metaclass.MetaClassIntrospector</tt>,
                    <tt>org.realityforge.metaclass.MetaClassException</tt>,
                    <tt>org.realityforge.metaclass.io.DefaultMetaClassAccessor</tt>
                    and <tt>org.realityforge.metaclass.io.MetaClassAccessor</tt>.
                </li>
                <li>
                    Removed constants pertaining to the serialized format
                    for MetaClass descriptors as they were never used and are
                    unlikely to be used in the future.
                </li>
                <li>
                    GenerateClassDescriptorsTask will continue to process source
                    files even if generation of a descriptor fails. However if
                    generation of descriptor does fail it will still throw a
                    BuildException after it has finished processing the rest of
                    the descriptors.
                </li>
                <li>
                    Achieve 100% unit test coverage of MetaClass code.
                </li>
                <li>
                    Remove modifiers from FeatureDescriptor as they can be
                    derived from the corresponding classes in java.lang.reflect.
                    This was a backwards incompatible change in serialization
                    format and thus the version of the MetaClass file format
                    was increased to 2.
                </li>
                <li>
                    Added in CachingMetaClassAccessor that caches results to a child
                    Accessor and reworked Introspector to use this internally.
                </li>
                <li>
                    Modified the MetaClassAccessor interface to accept an
                    extra parameter of type MetaClassAccessor. This accessor
                    can be used to resolve related classes when loading a
                    ClassDescriptor. This enables support for creating an
                    Accessor that supports inheritance of attributes.
                </li>
                <li>
                    By default the ant task will now not filter out attributes
                    that do not have a name space (ie are not in the form X.Y).
                    To disable this behaviour use set the
                    namespaceTagsOnly="false" attribute on the task.
                </li>
                <li>
                    Support reading and writing of descriptors in XML format.
                    The runtime will attempt to load XML descriptors if binary
                    descriptors are not present.
                </li>
                <li>
                    Documented the ant task.
                </li>
            </ul>
        </section>
    </body>

</document>
